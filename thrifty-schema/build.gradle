import org.jetbrains.kotlin.gradle.dsl.JvmTarget

/*
 * Thrifty
 *
 * Copyright (c) Microsoft Corporation
 * Copyright (c) GAHOJIN, Inc.
 *
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
 * WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE,
 * FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
 *
 * See the Apache Version 2.0 License for specific language governing permissions and limitations under the License.
 */
plugins {
    id 'java-library'
    id 'idea'
    id 'antlr'
    alias libs.plugins.detekt
    alias libs.plugins.dokka
    alias libs.plugins.kotlin.jvm
    alias libs.plugins.maven.publish
}

description = 'A simple Thrift IDL parser and validator'

generateGrammarSource {
    arguments += ["-package", "com.microsoft.thrifty.schema.antlr"]
}

dependencies {
    antlr libs.antlr
    implementation libs.antlr

    api libs.guava
    api libs.kotlin.stdlib

    implementation libs.okio

    testImplementation libs.junit
    testImplementation libs.kotest.assertions.core
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

kotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_1_8
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events("passed", "skipped", "failed")
    }
}

mavenPublishing {
    publishToMavenCentral()
    signAllPublications()
}

// For some reason, Kotlin compilation is being run prior to antlr by default.
tasks.named('compileKotlin').configure {
    dependsOn 'generateGrammarSource'
}

tasks.named('compileTestKotlin').configure {
    dependsOn 'generateTestGrammarSource'
}

// antlr doesn't hook up nicely with javaSourcesJar, so Gradle complains about
// it unless we manually specify the dependency between the two
tasks.matching { it.name == 'sourcesJar' || it.name == 'kotlinSourcesJar' || it.name == 'dokkaGeneratePublicationHtml' }.configureEach {
    dependsOn 'generateGrammarSource'
}
